<!DOCTYPE html>
<html>

<head>
  <title>
    Discloud File Storage | @riiraai
  </title>
  <meta name="description" content="A simple file upload form using Discord Webhooks for upload files to Discord Cloud Storage.">
  <link rel='stylesheet' href='/stylesheets/style.css' />
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.2/font/bootstrap-icons.min.css">
  <link rel="icon" type="image/png" href="/images/icons/logo-icon.png" />
</head>

<body>
  <div class="container px-md-5 py-md-2 position-relative">
    <div class="alert alert-warning d-flex align-items-center" role="alert" style=" margin-top: 10px; left: 100%; top: 20px!important; position: sticky!important; width: 300px; font-size: 12px; z-index: 999;">
      <i class="bi bi-exclamation-triangle-fill me-2"></i>
      <div>
        <i class="fw-bold">Be careful, your history will be lost if you clear your browser cache.</i>
      </div>
    </div>
    <div class="row gy-3">
      <div class="col-12">
        <div class="text-center text-lg-start">
          <h1 class="display-5 fw-bold lh-1 text-body-emphasis">
            Discord Cloud File Storage
          </h1>
          <p class="fs-6">
            A simple file upload form using Discord Webhooks for upload files to Discord Cloud Storage.
          </p>
          <div class="input-group">
            <span class="input-group-text" id="method">POST</span>
            <input name="url" disabled type="text" class="form-control" value="<%= base_url %>">
            <button class="btn btn-primary" type="button" id="copy-action" onclick="copyToClipboard()">
              <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor"
                class="bi bi-clipboard-fill me-2" viewBox="0 0 16 16">
                <path fill-rule="evenodd"
                  d="M10 1.5a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5v1a.5.5 0 0 0 .5.5h3a.5.5 0 0 0 .5-.5zm-5 0A1.5 1.5 0 0 1 6.5 0h3A1.5 1.5 0 0 1 11 1.5v1A1.5 1.5 0 0 1 9.5 4h-3A1.5 1.5 0 0 1 5 2.5zm-2 0h1v1A2.5 2.5 0 0 0 6.5 5h3A2.5 2.5 0 0 0 12 2.5v-1h1a2 2 0 0 1 2 2V14a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V3.5a2 2 0 0 1 2-2" />
              </svg>Copy Clipboard
            </button>
          </div>
        </div>
      </div>
      <div class="col-md-5">
        <div class="border rounded-3 p-4 mb-3">
          <b>Body&nbsp;</b><small class="text-secondary">form-data</small>
          <hr />
          <div class="row gx-3">
            <div class="col-6 text-muted" style="font-size: 11px;">
              Key
            </div>
            <div class="col-6 text-muted" style="font-size: 11px;">
              Value
            </div>
          </div>
          <div class="row gx-3">
            <div class="col-6 fs-6 fw-semibold">
              File
            </div>
            <div class="col-6">
              <small><em>binary</em></small>
            </div>
          </div>
        </div>
        <form id="uploadForm" class="p-4 border rounded-3 bg-body-tertiary" method="post" enctype="multipart/form-data">
          <!-- action="/api/upload-result" -->
          <input type="file" class="form-control" id="fileInput" name="file" />
          <!-- <button class="w-100 btn btn-sm mt-2" type="submit">Upload File</button> -->
          <button class="w-100 btn btn-sm mt-2" type="button" onclick="uploadFileUsingWebhookDiscordJs()">Upload
            File</button>
        </form>
      </div>
      <div class="col-md-7">
        <div class="p-4 border rounded-3 bg-body-tertiary">
          JSON Respons:
          <code class="d-block" style="white-space: pre-wrap;" id="json"></code>
        </div>
      </div>
      <div class="col-md-12">
        <div class="mt-5 mb-2 d-flex align-items-center justify-content-between">
          <h6 class="fw-bold mb-0">History File Uploads</h6>
          <button class="btn btn-primary btn-sm" onclick="getLoadData()"><i class="bi bi-arrow-clockwise"></i></button>
        </div>
        <div class="p-3 border rounded-3">
          <div class="table-responsive">
            <table class="table">
              <thead>
                <tr>
                  <th scope="col">#</th>
                  <th scope="col">Thumbnail</th>
                  <th scope="col">File Name</th>
                  <th scope="col">Type</th>
                  <th scope="col">Size</th>
                  <th scope="col">Url Preview</th>
                  <th scope="col">Action</th>
                </tr>
              </thead>
              <tbody id="dataUpload"></tbody>
            </table>
          </div>
          <nav aria-label="Page navigation example">
            <ul class="pagination justify-content-center">
              <li class="page-item">
                <button class="page-link" onclick="buttonPrevPage()">Previous</button>
              </li>
              <li class="page-item">
                <button class="page-link" onclick="buttonNextPage()">Next</button>
              </li>
            </ul>
          </nav>
        </div>
      </div>
    </div>
    <hr class="mt-5" />
    <div class="d-flex flex-column flex-md-row justify-content-between align-items-center align-md-items-end gap-4">
      <div class="text-center text-md-left text-muted">
        <small> Build with
          <a href="https://discord.js.org/" target="_blank">Discord.js</a>
          , <a href="https://expressjs.com/" target="_blank">Express.js</a>
          , <a href="https://getbootstrap.com/docs/5.3/getting-started/introduction/#cdn-links" target="_blank">Bootstrap CDN</a>
          and <a href="https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage" target="_blank">Local Storage</a> for save data history file uploads.
        </small>
        <br/>
      </div>
      <a href="https://github.com/riiraai" target="_blank">
        <img src="/images/icons/icon.png" alt="riiraai" width="40" height="40" class="rounded-circle me-2" />
      </a>
    </div>
  </div>
  <script>
    document.getElementById('json').innerHTML = JSON.stringify({ "code": 400, "success": false, "message": "Please upload a file." }, null, 2);

    document.getElementById('uploadForm').querySelector('button').disabled = true;
    document.getElementById('uploadForm').querySelector('button').classList.add('btn-secondary');
    document.getElementById('uploadForm').querySelector('button').classList.remove('btn-primary');
    document.getElementById('fileInput').addEventListener('change', function () {
      if (document.getElementById('fileInput').value != "") {
        document.getElementById('uploadForm').querySelector('button').disabled = false;
        document.getElementById('uploadForm').querySelector('button').classList.remove('btn-secondary');
        document.getElementById('uploadForm').querySelector('button').classList.add('btn-primary');
      }
    });

    function copyToClipboardTable(valueText, buttonActionId) {
      var tooltip = document.getElementById(buttonActionId);

      navigator.clipboard.writeText(valueText);
      tooltip.innerHTML = "Copied";
      setTimeout(function () {
        tooltip.innerHTML = "<i class='bi bi-clipboard-fill me-2'></i>Copy Url";
      }, 2000);
    }

    function buttonPrevPage() {
      alert('Clicked Previous');
    }

    function buttonNextPage() {
      alert('Clicked Next');
    }

    const getLoadData = () => {
      const getJsonStorage = JSON.parse(localStorage.getItem('json'));
      const getElementIdDataUpload = document.getElementById('dataUpload');

      getElementIdDataUpload.innerHTML = '';
      if (getJsonStorage && getJsonStorage.length > 0) {
        getJsonStorage.map((data, index) => {
          const tr = document.createElement('tr');
          tr.innerHTML = `
            <th scope="row">${index + 1}</th>
            <td>
              <div class="rounded-circle overflow-hidden" style="width: 60px;">
                <img style="width: 60px; height: 60px; object-fit: cover;" src="${data.url}" alt="${data.filename}">
              </div>
            </td>
            <td>${data.filename}</td>
            <td>${convertBytesToData(data.size)}</td>
            <td>${data.content_type}</td>
            <td><a href="${data.url}" target="_blank">Visit Url</a><br/></td>
            <td>
              <div class="btn-group btn-group-sm" role="group" aria-label="Basic mixed styles example">
                <button id="copy-action-${index}" type="button" class="btn btn-primary text-white" onclick="copyToClipboardTable('${data.url}', 'copy-action-${index}')">
                  <i class="bi bi-clipboard-fill me-2"></i>Copy Url
                </button>
                <button type="button" class="btn btn-danger" onclick="deleteDataWithConfirm(${index})">
                  <i class="bi bi-trash-fill me-2"></i>Delete
                </button>
              </div>
            </td>
          `;
          getElementIdDataUpload && getElementIdDataUpload.appendChild(tr);
        });
      } else {
        getElementIdDataUpload.innerHTML = `
          <tr>
            <td colspan="5" class="text-center">No data found. You can upload files first.</td>
          </tr>
        `;
      }
    }

    const deleteDataWithConfirm = (index) => {
      const getJsonStorage = JSON.parse(localStorage.getItem('json'));
      const confirmDelete = confirm('Are you sure you want to delete this data?');
      if (confirmDelete) {
        delete getJsonStorage[index]
        const newData = getJsonStorage.filter(e => e != null);
        console.log("ðŸš€ ~ file: index.ejs:99 ~ deleteDataWithConfirm ~ newData:", newData)

        localStorage.setItem('json', JSON.stringify(newData));
        window.location.reload();
      }
    }

    const convertBytesToData = (bytes) => {
      const sizes = ["Bytes", "KB", "MB", "GB", "TB"];
      if (bytes == 0) {
        return "n/a";
      }
      const i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));
      if (i == 0) {
        return bytes + " " + sizes[i];
      }
      return (bytes / Math.pow(1024, i)).toFixed(1) + " " + sizes[i];
    };

    const getJsonStorage = JSON.parse(localStorage.getItem('json'));
    const getElementIdDataUpload = document.getElementById('dataUpload');

    if (getJsonStorage && getJsonStorage.length > 0) {
      getJsonStorage.map((data, index) => {
        const tr = document.createElement('tr');
        tr.innerHTML = `
          <th scope="row">${index + 1}</th>
          <td>
            <div class="rounded-circle overflow-hidden" style="width: 60px;">
              ${data.content_type.includes('image')
                ? `<img style="width: 60px; height: 60px; object-fit: cover;" src="${data.url}" alt="${data.filename}">`
                : `<i class="bi bi-file-earmark-fill text-primary d-block text-center" style="font-size: 35px;"></i>`
              }
            </div>
          </td>
          <td>${data.filename}</td>
          <td>${data.content_type}</td>
          <td>${convertBytesToData(data.size)}</td>
          <td><a href="${data.url}" target="_blank">Visit Url</a><br/></td>
          <td>
            <div class="btn-group btn-group-sm" role="group" aria-label="Basic mixed styles example">
              <button id="copy-action-${index}" type="button" class="btn btn-primary text-white" onclick="copyToClipboardTable('${data.url}', 'copy-action-${index}')">
                <i class="bi bi-clipboard-fill me-2"></i>Copy Url
              </button>
              <button type="button" class="btn btn-danger" onclick="deleteDataWithConfirm(${index})">
                <i class="bi bi-trash-fill me-2"></i>Delete
              </button>
            </div>
          </td>
        `;
        getElementIdDataUpload && getElementIdDataUpload.appendChild(tr);
      });
    } else {
      getElementIdDataUpload.innerHTML = `
        <tr>
          <td colspan="5" class="text-center">No data found. You can upload files first.</td>
        </tr>
      `;
    }

    function uploadFileUsingWebhookDiscordJs() {
      const getLocalStorage = JSON.parse(localStorage.getItem('json'));
      const getFileInput = document.getElementById("fileInput").files[0];
      const getUrl = document.getElementsByName('url')[0].value;

      const formData = new FormData();
      const xhr = new XMLHttpRequest();

      formData.append("file", getFileInput);
      xhr.open("POST", getUrl);
      xhr.onload = function (e) {
        let dataJsonStorage = [];
        const resText = JSON.parse(xhr.responseText);

        if (getLocalStorage == null) {
          dataJsonStorage.push(...resText.response);
        } else {
          dataJsonStorage.push(...resText.response, ...getLocalStorage);
        }

        document.getElementById('uploadForm').reset();
        document.getElementById('uploadForm').querySelector('button').disabled = true;
        document.getElementById('uploadForm').querySelector('button').classList.add('btn-secondary');
        document.getElementById('json').innerHTML = JSON.stringify(resText, null, 2);

        localStorage.setItem('json', JSON.stringify(dataJsonStorage));
        getLoadData();
      };
      xhr.send(formData);
    }

    function copyToClipboard() {
      var copyText = document.getElementsByName('url')[0].value;
      var tooltip = document.getElementById("copy-action");

      navigator.clipboard.writeText(copyText);
      tooltip.innerHTML = `<i class="bi bi-clipboard-check-fill me-2"></i>Copied`;
      setTimeout(function () {
        tooltip.innerHTML = `<i class="bi bi-clipboard-fill me-2"></i>Copy Clipboard`;
      }, 2000);
    }
  </script>
</body>

</html>